version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8 # Example runtime, adjust as needed
    commands:
      # Download and unzip Terraform. Adjust version as necessary.
      - curl -o terraform.zip https://releases.hashicorp.com/terraform/1.1.0/terraform_1.1.0_linux_amd64.zip
      - unzip terraform.zip
      - mv terraform $HOME/bin
      - export PATH=$PATH:$HOME/bin
      # Verify Terraform installation
      - terraform --version

  pre_build:
    commands:
      # Initialize Terraform
      #- terraform init
      echo "hello"

  build:
    commands:
      #- terraform plan
      echo "hello"
      # Generate a plan file
      # - terraform plan -out=tfplan
      # - terraform show -json tfplan > plan.json
      # - |
      #   if [ $(jq '.resource_changes | length' plan.json) -eq 0 ]; then
      #     echo "No infrastructure changes detected, skipping build."
      #     exit 0
      #   else
      #     echo "Infrastructure changes detected, proceeding with apply."
      #     terraform apply -auto-approve tfplan
      #   fi

      # CAUTION: The following apply command will automatically apply changes
      # - terraform apply -auto-approve

      # - if [ "$IS_PR_CREATION" = "true" ]; then
      #     echo "PR creation detected. Checking for infrastructure changes..."
      #     terraform plan
      #   elif [ "$IS_PR_MERGE" = "true" ]; then
      #     echo "PR merge detected. Applying infrastructure changes..."
      #     terraform plan -out=tfplan
      #     terraform show -json tfplan > plan.json
      #     - |
      #       if [ $(jq '.resource_changes | length' plan.json) -eq 0 ]; then
      #         echo "No infrastructure changes detected, skipping build."
      #         exit 0
      #       else
      #         echo "Infrastructure changes detected, proceeding with apply."
      #         terraform apply -auto-approve tfplan
      #       fi

      #     # terraform apply -auto-approve tfplan
      #   else
      #     echo "Unknown build context"
      #   fi

#  post_build:
#    commands:
      # Post-build steps or cleanup

#artifacts:
#  files:
    #- location_of_artifacts_if_any # Specify artifact locations if necessary

#cache:
#  paths:
#    - '.terraform/**/*' # Cache the .terraform directory to speed up future builds

